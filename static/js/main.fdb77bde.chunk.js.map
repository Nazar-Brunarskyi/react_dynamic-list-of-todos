{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSelect","selectedId","className","map","id","title","completed","type","onClick","TodoFilter","filterType","onFilter","query","onSearch","onClean","value","onChange","event","currentTarget","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedTodo","onClose","userId","useState","isUserLoading","setLoadingStatus","user","setUser","useEffect","getUser","userFromServer","href","email","name","App","todoFromServer","setTodoFromServer","areUsersLoaded","setFilterType","setQuery","setSelectedTodo","loadTodos","statusOfTodos","filter","todo","visibleTodos","toLowerCase","includes","newSelectedTodo","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdb77bde.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  onSelect: (id: number) => void,\n  selectedId: number,\n}\n\nexport const TodoList: React.FC<Props> = ({ todos, onSelect, selectedId }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n\n      {\n        todos.map(({ id, title, completed }) => (\n          <tr\n            key={id}\n            data-cy=\"todo\"\n            className=\"\"\n          >\n            <td className=\"is-vcentered\">{id}</td>\n\n            {\n              completed\n                ? (\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </td>\n                )\n                : (<td className=\"is-vcentered\" />)\n            }\n\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={`has-text-${completed ? 'success' : 'danger'}`}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(id)}\n              >\n                <span className=\"icon\">\n                  <i className={`far fa-eye${selectedId === id ? '-slash' : ''}`} />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))\n      }\n    </tbody>\n  </table>\n);\n","import { FC } from 'react';\n\ninterface Props {\n  filterType: string,\n  onFilter: React.Dispatch<React.SetStateAction<string>>,\n  query: string,\n  onSearch: React.Dispatch<React.SetStateAction<string>>,\n  onClean: () => void,\n}\n\nexport const TodoFilter: FC<Props> = ({\n  filterType,\n  onFilter,\n  query,\n  onSearch,\n  onClean,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterType}\n          onChange={(event) => onFilter(event.currentTarget.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onSearch(event.currentTarget.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {\n          query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onClean}\n            />\n          )\n        }\n      </span>\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  selectedTodo: Todo,\n  onClose: () => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, onClose }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodo;\n\n  const [isUserLoading, setLoadingStatus] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId)\n      .then(userFromServer => {\n        setUser(userFromServer);\n        setLoadingStatus(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isUserLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todoFromServer, setTodoFromServer] = useState<Todo[]>([]);\n  const [areUsersLoaded, setLoadingStatus] = useState(false);\n  const [filterType, setFilterType] = useState('all');\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const loadTodos = (statusOfTodos: string) => {\n    setLoadingStatus(false);\n\n    getTodos()\n      .then(todos => {\n        switch (statusOfTodos) {\n          case 'all':\n            setTodoFromServer(todos);\n            break;\n          case 'active':\n            setTodoFromServer(todos.filter(todo => !todo.completed));\n            break;\n          case 'completed':\n            setTodoFromServer(todos.filter(todo => todo.completed));\n            break;\n\n          default:\n            break;\n        }\n\n        setLoadingStatus(true);\n      });\n  };\n\n  useEffect(() => {\n    loadTodos(filterType);\n  }, [filterType]);\n\n  const handleClean = () => {\n    setQuery('');\n  };\n\n  const handleTodoSelect = (id: number) => {\n    const newSelectedTodo = todoFromServer.find(todo => todo.id === id) || null;\n\n    setSelectedTodo(newSelectedTodo);\n  };\n\n  const handleTodoClose = () => {\n    setSelectedTodo(null);\n  };\n\n  const visibleTodos = todoFromServer.filter(todo => {\n    return todo.title\n      .toLowerCase()\n      .includes(query.toLowerCase());\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterType={filterType}\n                onFilter={setFilterType}\n                query={query}\n                onSearch={setQuery}\n                onClean={handleClean}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                areUsersLoaded\n                  ? (\n                    <TodoList\n                      todos={visibleTodos}\n                      onSelect={handleTodoSelect}\n                      selectedId={selectedTodo?.id || 0}\n                    />\n                  )\n                  : <Loader />\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal selectedTodo={selectedTodo} onClose={handleTodoClose} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}